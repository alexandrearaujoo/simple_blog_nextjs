import Head from '../../node_modules/next/head'
import { useRouter } from '../../node_modules/next/router'
import * as yup from 'yup'
import { useForm } from 'react-hook-form'
import { yupResolver } from '@hookform/resolvers/yup'
import ImgLogin from '../assets/login.svg'
import {
    Container,
    Button,
    Form,
    Section,
    DivInput,
    ButtonSignUp
} from '../styles/pages/login'
import { useUser } from '../contexts/User'

interface UserLoginProps {
    email: string
    password: string
}

const Login = () => {
    const router = useRouter()
    const { loginUser } = useUser()

    const loginSchema = yup.object().shape({
        email: yup.string().email('Invalid email').required('Required field'),
        password: yup.string().required('Required field')
    })

    const {
        register,
        handleSubmit,
        formState: { errors }
    } = useForm({
        resolver: yupResolver(loginSchema)
    })

    const onSubmit = async (data: UserLoginProps) => {
        await loginUser(data)
    }

    const changePage = (path: string) => {
        router.push(path)
    }

    return (
        <>
            <Head>
                <title>Login</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link
                    rel="icon"
                    href="https://cdn-icons-png.flaticon.com/512/3959/3959542.png"
                />
            </Head>
            <Container>
                <ImgLogin />
                <Section>
                    <Form onSubmit={handleSubmit(onSubmit)}>
                        <DivInput>
                            <label>
                                Email
                                {!!errors && (
                                    <span>{errors.email?.message}</span>
                                )}
                            </label>
                            <input type="text" {...register('email')} />
                        </DivInput>
                        <DivInput>
                            <label>
                                Password
                                {!!errors && (
                                    <span> {errors.password?.message}</span>
                                )}
                            </label>
                            <input type="password" {...register('password')} />
                        </DivInput>
                        <Button type="submit">Logar</Button>
                        <span>
                            NÃ£o possui conta ainda ?
                            <ButtonSignUp
                                type="button"
                                onClick={() => changePage('/signup')}
                            >
                                Cadastre-se
                            </ButtonSignUp>
                        </span>
                    </Form>
                </Section>
            </Container>
        </>
    )
}

export default Login
