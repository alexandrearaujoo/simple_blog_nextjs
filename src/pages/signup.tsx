import Head from 'next/head'
import { useRouter } from 'next/router'
import ImgSignUp from '../assets/signup.svg'
import { useUser } from '../contexts/User'
import * as yup from 'yup'
import { useForm } from 'react-hook-form'
import { yupResolver } from '@hookform/resolvers/yup'
import {
    Container,
    Section,
    DivInput,
    Form,
    Button,
    ButtonLogin
} from '../styles/pages/signup'

interface CreateUserProps {
    username: string
    email: string
    avatarUrl: string
    password: string
}

const SignUp = () => {
    const router = useRouter()
    const {createUser} = useUser()

    const signUpSchema = yup.object().shape({
        username: yup.string().required('Required field'),
        email: yup.string().email('Invalid email').required('Required field'),
        avatarUrl: yup.string().required('Required field'),
        password: yup.string().required('Required field')
    })

    const {register, handleSubmit, formState: {errors}} = useForm({
        resolver: yupResolver(signUpSchema)
    })

    const onSubmit = async (data: CreateUserProps) => {
        await createUser(data)
    }

    const changePage = (path: string) => {
        router.push(path)
    }

    return (
        <>
            <Head>
                <title>Sign Up</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link
                    rel="icon"
                    href="https://cdn-icons-png.flaticon.com/512/3959/3959542.png"
                />
            </Head>
            <Container>
                <ImgSignUp />
                <Section>
                    <Form onSubmit={handleSubmit(onSubmit)}>
                        <DivInput>
                            <label>Username {!!errors && <span>{errors.username?.message}</span>}</label>
                            <input type="text" {...register('username')}/>
                        </DivInput>
                        <DivInput>
                            <label>Email {!!errors && <span>{errors.email?.message}</span>}</label>
                            <input type="text" {...register('email')}/>
                        </DivInput>
                        <DivInput>
                            <label>Avatar URL {!!errors && <span>{errors.avatarUrl?.message}</span>}</label>
                            <input type="text" {...register('avatarUrl')}/>
                        </DivInput>
                        <DivInput>
                            <label>Password {!!errors && <span>{errors.password?.message}</span>}</label>
                            <input type="text" {...register('password')}/>
                        </DivInput>
                        <Button type='submit'>Sign Up</Button>
                        <span>
                            JÃ¡ possui conta ainda ?
                            <ButtonLogin
                                onClick={() => changePage('/')}
                                type="button"
                            >
                                Logar
                            </ButtonLogin>
                        </span>
                    </Form>
                </Section>
            </Container>
        </>
    )
}

export default SignUp
